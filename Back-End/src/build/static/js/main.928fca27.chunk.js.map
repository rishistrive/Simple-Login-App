{"version":3,"sources":["assests/images/welcome.jpg","Redux/Actions/index.js","Redux/Actions/usersAction.js","Services/http-common.js","Services/UserService.js","Thunk/userThunk.js","utils.js","Components/Signup.js","Components/Login.js","Components/Dashboard.js","Components/Routes/privateRoute.js","Components/Routes/publicRoute.js","Components/Logout.js","App.js","Redux/Reducers/usersReducer.js","Redux/Reducers/index.js","Redux/Store.js","index.js"],"names":["SIGNUP_USER","SET_LOGIN_USER","RESET_LOGIN_USER","signupUserAction","data","type","payload","axios","create","baseURL","headers","http","post","signupUser","dispatch","a","UserService","signup","res","alert","signupFormField","label","name","placeholder","required","Signup","useDispatch","history","useHistory","submitHandler","e","preventDefault","target","names","value","password","email","city","push","className","Container","Form","onSubmit","map","field","Group","controlId","Label","Control","Button","variant","login","localStorage","setItem","token","Dashboard","alt","src","require","default","PrivateRoute","Component","component","rest","useSelector","state","Users","render","props","to","PublicRoute","Logout","useEffect","removeItem","App","Navbar","bg","Brand","as","Link","Nav","exact","path","Login","initialState","users","getItem","username","action","_id","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.928fca27.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/welcome.135f8233.jpg\";","// For Users\nexport const SIGNUP_USER = \"SIGNUP_USER\";\nexport const SET_LOGIN_USER = \"SET_LOGIN_USER\";\nexport const RESET_LOGIN_USER = \"RESET_LOGIN_USER\";\n","import { RESET_LOGIN_USER, SET_LOGIN_USER, SIGNUP_USER } from \".\";\n\nexport const signupUserAction = (data) => ({\n  type: SIGNUP_USER,\n  payload: data,\n});\n\nexport const resetLoginUser = () => ({\n  type: RESET_LOGIN_USER,\n});\n\nexport const setLoginUser = (payload) => {\n  localStorage.setItem(\"token\", payload.token);\n  localStorage.setItem(\"name\", payload.name);\n  return { type: SET_LOGIN_USER, payload };\n};\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://polar-forest-09224.herokuapp.com/\",\n  headers: {\n    \"Content-type\": \"application/json\",\n  },\n});\n","import http from \"./http-common\";\n\nclass UserService {\n  signup(data) {\n    return http.post(\"/signup\", data);\n  }\n\n  login(data) {\n    return http.post(\"/login\", data);\n  }\n}\n\nexport default new UserService();\n","import { setLoginUser } from \"../Redux/Actions/usersAction\";\nimport { signupUserAction } from \"../Redux/Actions/usersAction\";\nimport UserService from \"../Services/UserService\";\n\nexport const signupUser = (data) => async (dispatch) => {\n  try {\n    const res = await UserService.signup(data);\n    dispatch(signupUserAction(res.data));\n  } catch (err) {\n    alert(err);\n  }\n};\n\nexport const loginUser = (data) => async (dispatch) => {\n  try {\n    const res = await UserService.login(data);\n    dispatch(setLoginUser(res.data));\n  } catch (err) {\n    alert(\"Incorrect Email or Password\");\n  }\n};\n","export const signupFormField = [\n  {\n    label: \"Name\",\n    type: \"text\",\n    name: \"names\",\n    placeholder: \"Enter name\",\n    required: \"required\",\n  },\n  {\n    label: \"Email Address\",\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Enter email\",\n    required: \"required\",\n  },\n  {\n    label: \"Password\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Enter password\",\n    required: \"required\",\n  },\n  {\n    label: \"City\",\n    type: \"text\",\n    name: \"city\",\n    placeholder: \"Enter city\",\n    required: \"required\",\n  },\n];\n","import React from \"react\";\nimport { Button, Container, Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { signupUser } from \"../Thunk/userThunk\";\nimport { signupFormField } from \"../utils\";\n\nexport default function Signup() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    if (\n      e.target.names.value &&\n      e.target.password.value &&\n      e.target.email.value &&\n      e.target.city.value\n    ) {\n      await dispatch(\n        signupUser({\n          name: e.target.names.value,\n          password: e.target.password.value,\n          email: e.target.email.value,\n          city: e.target.city.value,\n        })\n      );\n      history.push(\"/login\");\n    }\n  };\n  return (\n    <div className=\"col-3 mx-auto\">\n      <br />\n      <h1>Signup Page</h1>\n      <br />\n      <br />\n      <Container>\n        <Form onSubmit={submitHandler}>\n          {signupFormField.map((field) => (\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>{field.label}</Form.Label>\n              <Form.Control\n                type={field.type}\n                placeholder={field.placeholder}\n                name={field.name}\n              />\n            </Form.Group>\n          ))}\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { loginUser } from \"../Thunk/userThunk\";\n\nexport default function Signup() {\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (e.target.email.value && e.target.password.value) {\n      dispatch(\n        loginUser({\n          email: e.target.email.value,\n          password: e.target.password.value,\n        })\n      );\n    } else {\n      alert(\"invlid input\");\n    }\n  };\n  return (\n    <div className=\"col-3 mx-auto\">\n      <br />\n      <h1>Login Page</h1>\n      <br />\n      <br />\n      <Container>\n        <Form onSubmit={submitHandler}>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n            />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </Container>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Dashboard() {\n  return (\n    <div>\n      <h1 className=\"pt-5\">Welcome Page</h1>\n      <img alt=\"avtar\" src={require(\"../assests/images/welcome.jpg\").default} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const token = useSelector((state) => state.Users.token);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        token ? <Component {...rest} {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route } from \"react-router\";\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n  const token = useSelector((state) => state.Users.token);\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        token ? (\n          <Redirect to=\"/welcome\" />\n        ) : (\n          <Component {...rest} {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { resetLoginUser } from \"../Redux/Actions/usersAction\";\n\nexport default function Logout() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(resetLoginUser());\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"name\");\n    alert(\"You are SuccessFully LogOut\");\n    history.push(\"/login\");\n  }, [dispatch, history]);\n\n  return <div></div>;\n}\n","import { BrowserRouter, Link, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Signup from \"./Components/Signup\";\nimport Login from \"./Components/Login\";\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\nimport Dashboard from \"./Components/Dashboard\";\nimport PrivateRoute from \"./Components/Routes/privateRoute\";\nimport PublicRoute from \"./Components/Routes/publicRoute\";\nimport Logout from \"./Components/Logout\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\n\nfunction App() {\n  const token = useSelector((state) => state.Users.token);\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Navbar bg=\"dark\" variant=\"dark\">\n          <Container>\n            <Navbar.Brand as={Link} to=\"/\">\n              React App\n            </Navbar.Brand>\n            <Nav className=\"me-auto\">\n              {token ? (\n                <>\n                  <Nav.Link as={Link} to=\"/\">\n                    Welcome\n                  </Nav.Link>\n                  <Nav.Link as={Link} to=\"/logout\">\n                    Logout\n                  </Nav.Link>\n                </>\n              ) : (\n                <>\n                  <Nav.Link as={Link} to=\"/login\">\n                    Login\n                  </Nav.Link>\n                  <Nav.Link as={Link} to=\"/signup\">\n                    Signup\n                  </Nav.Link>\n                </>\n              )}\n            </Nav>\n          </Container>\n        </Navbar>\n\n        <Switch>\n          <PrivateRoute component={Logout} exact path=\"/logout\" />\n          <PrivateRoute component={Dashboard} exact path=\"/welcome\" />\n          <PrivateRoute exact path=\"/\">\n            <Redirect to=\"/welcome\" />\n          </PrivateRoute>\n          <PublicRoute component={Signup} exact path=\"/signup\" />\n          <PublicRoute component={Login} exact path=\"/login\" />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  RESET_LOGIN_USER,\n  SET_LOGIN_USER,\n  SIGNUP_USER,\n} from \"../Actions\";\n\nconst initialState = {\n  users:[],\n  token: localStorage.getItem(\"token\"),\n  username: localStorage.getItem(\"name\"),\n};\n\nconst Users = (state = initialState, action) => {\n  switch (action.type) {\n    case SIGNUP_USER:\n      return {\n        ...state,\n        users: action.payload,\n      };\n    case SET_LOGIN_USER:\n      return {\n        ...state,\n        token: action.payload.token,\n        username: action.payload.name,\n      };\n    case RESET_LOGIN_USER:\n      return {\n        ...state,\n        token: null,\n        _id: null,\n        username: null,\n        email: null,\n        city: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default Users;\n","import { combineReducers } from \"redux\";\nimport Users from \"./usersReducer\";\n\nconst rootReducer = combineReducers({\n  Users,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./Reducers\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk)\n  )\n);\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './Redux/Store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}